{
  "totalCount": 50,
  "matches": [
    {
      "repository": "keybase/client",
      "file": "rnmodules/react-native-kb/android/src/main/java/com/reactnativekb/KbPackage.java",
      "url": "https://github.com/keybase/client/blob/34cb6d98300cd5287bca166396d0e970f6b2c223/rnmodules/react-native-kb/android/src/main/java/com/reactnativekb/KbPackage.java",
      "fileContent": "package com.reactnativekb;\n\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class KbPackage extends TurboReactPackage {\n\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n    if (name.equals(KbModule.NAME)) {\n      return new KbModule(reactContext);\n    } else {\n      return null;\n    }\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return () -> {\n      final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n      boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n      moduleInfos.put(\n              KbModule.NAME,\n              new ReactModuleInfo(\n                      KbModule.NAME,\n                      KbModule.NAME,\n                      false, // canOverrideExistingModule\n                      false, // needsEagerInit\n                      true, // hasConstants\n                      false, // isCxxModule\n                      isTurboModule // isTurboModule\n      ));\n      return moduleInfos;\n    };\n  }\n}\n",
      "stars": 8934,
      "lastCommitDate": "2024-12-18T15:53:37Z"
    },
    {
      "repository": "react-native-image-picker/react-native-image-picker",
      "file": "android/src/main/java/com/imagepicker/ImagePickerPackage.java",
      "url": "https://github.com/react-native-image-picker/react-native-image-picker/blob/3a118a60b2894a52fb232e12e4404dc0de19e305/android/src/main/java/com/imagepicker/ImagePickerPackage.java",
      "fileContent": "package com.imagepicker;\n\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ImagePickerPackage extends TurboReactPackage {\n\n    @Nullable\n    @Override\n    public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n        if (name.equals(ImagePickerModuleImpl.NAME)) {\n            return new ImagePickerModule(reactContext);\n        } else {\n            return null;\n        }\n    }\n\n    @Override\n    public ReactModuleInfoProvider getReactModuleInfoProvider() {\n        return () -> {\n            final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n            boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n            moduleInfos.put(\n                    ImagePickerModuleImpl.NAME,\n                    new ReactModuleInfo(\n                            ImagePickerModuleImpl.NAME,\n                            ImagePickerModuleImpl.NAME,\n                            false, // canOverrideExistingModule\n                            false, // needsEagerInit\n                            true, // hasConstants\n                            false, // isCxxModule\n                            isTurboModule // isTurboModule\n                    ));\n            return moduleInfos;\n        };\n    }\n}\n",
      "stars": 8498,
      "lastCommitDate": "2024-12-09T07:43:42Z"
    },
    {
      "repository": "Shopify/react-native-skia",
      "file": "packages/skia/android/src/main/java/com/shopify/reactnative/skia/RNSkiaPackage.java",
      "url": "https://github.com/Shopify/react-native-skia/blob/bce41836e49b7fa2a76f7dc2287f9219746c786e/packages/skia/android/src/main/java/com/shopify/reactnative/skia/RNSkiaPackage.java",
      "fileContent": "// RnskiaPackage.java\n\npackage com.shopify.reactnative.skia;\n\nimport androidx.annotation.Nullable;\n\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.annotations.ReactModule;\nimport com.facebook.react.module.annotations.ReactModuleList;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.turbomodule.core.interfaces.TurboModule;\nimport com.facebook.react.uimanager.ViewManager;\n\n@ReactModuleList(\n        nativeModules = {\n                RNSkiaModule.class,\n        })\npublic class RNSkiaPackage extends TurboReactPackage {\n    @Override\n    public List<NativeModule> createNativeModules(ReactApplicationContext reactContext) {\n        return Arrays.<NativeModule>asList(new RNSkiaModule(reactContext));\n    }\n\n    @Nullable\n    @Override\n    public NativeModule getModule(String s, ReactApplicationContext reactApplicationContext) {\n        switch (s) {\n            case RNSkiaModule.NAME:\n                return new RNSkiaModule(reactApplicationContext);\n            default:\n                return null;\n        }\n    }\n\n    @Override\n    public List<ViewManager> createViewManagers(ReactApplicationContext reactContext) {\n        return Arrays.<ViewManager>asList(new SkiaPictureViewManager(), new SkiaDomViewManager());\n    }\n\n    @Override\n    public ReactModuleInfoProvider getReactModuleInfoProvider() {\n        return new ReactModuleInfoProvider() {\n            @Override\n            public Map<String, ReactModuleInfo> getReactModuleInfos() {\n                final Map<String, ReactModuleInfo> reactModuleInfoMap = new HashMap<>();\n                Class<? extends NativeModule>[] moduleList =\n                        new Class[] {\n                                RNSkiaModule.class,\n                        };\n\n                for (Class<? extends NativeModule> moduleClass : moduleList) {\n                    ReactModule reactModule = moduleClass.getAnnotation(ReactModule.class);\n\n                    reactModuleInfoMap.put(\n                            reactModule.name(),\n                            new ReactModuleInfo(\n                                    reactModule.name(),\n                                    moduleClass.getName(),\n                                    reactModule.canOverrideExistingModule(),\n                                    reactModule.needsEagerInit(),\n                                    reactModule.hasConstants(),\n                                    reactModule.isCxxModule(),\n                                    TurboModule.class.isAssignableFrom(moduleClass)));\n                }\n                return reactModuleInfoMap;\n            }\n        };\n    }\n}\n",
      "stars": 7053,
      "lastCommitDate": "2024-12-18T15:22:00Z"
    },
    {
      "repository": "mrousavy/react-native-mmkv",
      "file": "package/android/src/main/java/com/mrousavy/mmkv/MmkvPackage.java",
      "url": "https://github.com/mrousavy/react-native-mmkv/blob/cca2617fa507c62624a1e46424616a1013234983/package/android/src/main/java/com/mrousavy/mmkv/MmkvPackage.java",
      "fileContent": "package com.mrousavy.mmkv;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class MmkvPackage extends TurboReactPackage {\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, @NonNull ReactApplicationContext reactContext) {\n    if (name.equals(MmkvPlatformContextModule.NAME)) {\n      return new MmkvPlatformContextModule(reactContext);\n    } else {\n      return null;\n    }\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return () -> {\n      final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n      moduleInfos.put(\n              MmkvPlatformContextModule.NAME,\n              new ReactModuleInfo(\n                      MmkvPlatformContextModule.NAME,\n                      MmkvPlatformContextModule.NAME,\n                      false, // canOverrideExistingModule\n                      false, // needsEagerInit\n                      true, // hasConstants\n                      false, // isCxxModule\n                      true // isTurboModule\n              ));\n      return moduleInfos;\n    };\n  }\n}\n",
      "stars": 6371,
      "lastCommitDate": "2024-12-17T14:39:49Z"
    },
    {
      "repository": "react-native-share/react-native-share",
      "file": "android/src/main/java/cl/json/RNSharePackage.java",
      "url": "https://github.com/react-native-share/react-native-share/blob/17fec7d4ad0ec4f824ae73ab7a8b149e00e0e54f/android/src/main/java/cl/json/RNSharePackage.java",
      "fileContent": "package cl.json;\n\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class RNSharePackage extends TurboReactPackage {\n\n    @Nullable\n    @Override\n    public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n        if (name.equals(RNShareImpl.NAME)) {\n            return new RNShare(reactContext);\n        } else {\n            return null;\n        }\n    }\n\n    @Override\n    public ReactModuleInfoProvider getReactModuleInfoProvider() {\n        return () -> {\n            final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n            moduleInfos.put(\n                    RNShareImpl.NAME,\n                    new ReactModuleInfo(\n                            RNShareImpl.NAME,\n                            RNShareImpl.NAME,\n                            false, // canOverrideExistingModule\n                            false, // needsEagerInit\n                            true, // hasConstants\n                            false, // isCxxModule\n                            true // isTurboModule\n            ));\n            return moduleInfos;\n        };\n    }\n}",
      "stars": 3691,
      "lastCommitDate": "2024-12-06T19:45:37Z"
    },
    {
      "repository": "react-native-google-signin/google-signin",
      "file": "android/src/main/java/com/reactnativegooglesignin/RNGoogleSigninPackage.java",
      "url": "https://github.com/react-native-google-signin/google-signin/blob/0a4d11d4c5145c510be6abe0ef005ec76b74641c/android/src/main/java/com/reactnativegooglesignin/RNGoogleSigninPackage.java",
      "fileContent": "package com.reactnativegooglesignin;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.uimanager.ViewManager;\n\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class RNGoogleSigninPackage extends TurboReactPackage {\n\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n    if (name.equals(RNGoogleSigninModule.NAME)) {\n      return new RNGoogleSigninModule(reactContext);\n    } else {\n      return null;\n    }\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return () -> {\n      boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n      final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n      moduleInfos.put(\n        RNGoogleSigninModule.NAME,\n        new ReactModuleInfo(\n          RNGoogleSigninModule.NAME,\n          RNGoogleSigninModule.NAME,\n//          \"RNGoogleSigninModule\",\n          false, // canOverrideExistingModule\n          false, // needsEagerInit\n          true, // hasConstants\n          false, // isCxxModule\n          isTurboModule // isTurboModule\n        ));\n      return moduleInfos;\n    };\n  }\n\n  @NonNull\n  @Override\n  public List<ViewManager> createViewManagers(ReactApplicationContext reactContext) {\n    return Arrays.asList(\n      new RNGoogleSigninButtonViewManager()\n    );\n  }\n}\n",
      "stars": 3257,
      "lastCommitDate": "2024-11-27T18:36:44Z"
    },
    {
      "repository": "gre/react-native-view-shot",
      "file": "android/src/main/java/fr/greweb/reactnativeviewshot/RNViewShotPackage.java",
      "url": "https://github.com/gre/react-native-view-shot/blob/71b3a2b925d293beb2928fc79a5e85667290966c/android/src/main/java/fr/greweb/reactnativeviewshot/RNViewShotPackage.java",
      "fileContent": "\npackage fr.greweb.reactnativeviewshot;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport javax.annotation.Nonnull;\n\npublic class RNViewShotPackage extends TurboReactPackage {\n  @Override\n  @Nonnull\n  public List<NativeModule> createNativeModules(@Nonnull ReactApplicationContext reactContext) {\n    List<NativeModule> modules = new ArrayList<>();\n    modules.add(new RNViewShotModule(reactContext));\n    return modules;\n  }\n  \n  @Nullable\n  @Override\n  public NativeModule getModule(@NonNull String name, @NonNull ReactApplicationContext reactApplicationContext) {\n    if (name.equals(RNViewShotModule.NAME)) {\n      return new RNViewShotModule(reactApplicationContext);\n    } else {\n      return null;\n    }\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return () -> {\n      final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n      boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n      moduleInfos.put(\n              RNViewShotModule.NAME,\n              new ReactModuleInfo(\n                      RNViewShotModule.NAME,\n                      RNViewShotModule.NAME,\n                      false, // canOverrideExistingModule\n                      false, // needsEagerInit\n                      false, // isCxxModule\n                      isTurboModule // isTurboModule\n              ));\n      return moduleInfos;\n    };\n  }\n}",
      "stars": 2710,
      "lastCommitDate": "2024-12-06T21:21:21Z"
    },
    {
      "repository": "henninghall/react-native-date-picker",
      "file": "android/src/main/java/com/henninghall/date_picker/DatePickerPackage.java",
      "url": "https://github.com/henninghall/react-native-date-picker/blob/ca897af18a6f648cf173db75efd2116c9704afda/android/src/main/java/com/henninghall/date_picker/DatePickerPackage.java",
      "fileContent": "package com.henninghall.date_picker;\n\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.ReactPackage;\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.uimanager.ViewManager;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport com.henninghall.date_picker.DatePickerModule;\nimport com.henninghall.date_picker.DatePickerManager;\n\npublic class DatePickerPackage extends TurboReactPackage implements ReactPackage {\n    public static ReactApplicationContext context;\n\n    @Nullable\n    @Override\n    public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n        if (name.equals(DatePickerModuleImpl.NAME)) {\n            context = reactContext;\n            return new DatePickerModule(reactContext);\n        } else {\n            return null;\n        }\n    }\n\n    @Override\n    public ReactModuleInfoProvider getReactModuleInfoProvider() {\n        return new ReactModuleInfoProvider() {\n            final boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n            public Map<String, ReactModuleInfo> getReactModuleInfos() {\n                final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n                moduleInfos.put(\n                        DatePickerModuleImpl.NAME,\n                        new ReactModuleInfo(\n                                DatePickerModuleImpl.NAME,\n                                DatePickerModuleImpl.NAME,\n                                false, // canOverrideExistingModule\n                                false, // needsEagerInit\n                                true, // hasConstants\n                                false, // isCxxModule\n                                isTurboModule\n                        ));\n                return moduleInfos;\n            }\n        };\n    }\n\n    @Override\n    public List<ViewManager> createViewManagers(ReactApplicationContext reactContext) {\n        context = reactContext;\n        return Arrays.<ViewManager> asList(\n                new DatePickerManager()\n        );\n    }\n\n    @Override\n    public List<NativeModule> createNativeModules(\n            ReactApplicationContext reactContext) {\n        List<NativeModule> modules = new ArrayList<>();\n        modules.add(new DatePickerModule(reactContext));\n        return modules;\n    }\n\n}",
      "stars": 2272,
      "lastCommitDate": "2024-12-13T08:19:11Z"
    },
    {
      "repository": "ammarahm-ed/react-native-mmkv-storage",
      "file": "android/src/main/java/com/ammarahmed/mmkv/RNMMKVPackage.java",
      "url": "https://github.com/ammarahm-ed/react-native-mmkv-storage/blob/09790b470e6162d1aee662a73784a9423040100a/android/src/main/java/com/ammarahmed/mmkv/RNMMKVPackage.java",
      "fileContent": "\npackage com.ammarahmed.mmkv;\n\nimport java.util.Map;\nimport java.util.HashMap;\n\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\n\npublic class RNMMKVPackage extends TurboReactPackage {\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n    if (name.equals(RNMMKVModule.NAME)) {\n      return new RNMMKVModule(reactContext);\n    } else {\n      return null;\n    }\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return () -> {\n      final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n      boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n      moduleInfos.put(\n              RNMMKVModule.NAME,\n              new ReactModuleInfo(\n                      RNMMKVModule.NAME,\n                      RNMMKVModule.NAME,\n                      false, // canOverrideExistingModule\n                      false, // needsEagerInit\n                      true, // hasConstants\n                      false, // isCxxModule\n                      true // isTurboModule\n              ));\n      return moduleInfos;\n    };\n  }\n}",
      "stars": 1619,
      "lastCommitDate": "2024-11-03T18:00:09Z"
    },
    {
      "repository": "bamlab/react-native-image-resizer",
      "file": "android/src/main/java/com/reactnativeimageresizer/ImageResizerPackage.java",
      "url": "https://github.com/bamlab/react-native-image-resizer/blob/d085f0652257d780b643da5e99369451d6a48330/android/src/main/java/com/reactnativeimageresizer/ImageResizerPackage.java",
      "fileContent": "package com.reactnativeimageresizer;\n\nimport androidx.annotation.Nullable;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\n\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ImageResizerPackage extends TurboReactPackage {\n\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n    if (name.equals(ImageResizerModule.NAME)) {\n        return new ImageResizerModule(reactContext);\n    } else {\n        return null;\n    }\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return () -> {\n      final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n      boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n      moduleInfos.put(\n              ImageResizerModule.NAME,\n              new ReactModuleInfo(\n                      ImageResizerModule.NAME,\n                      ImageResizerModule.NAME,\n                      false, // canOverrideExistingModule\n                      false, // needsEagerInit\n                      true, // hasConstants\n                      false, // isCxxModule\n                      isTurboModule // isTurboModule\n      ));\n      return moduleInfos;\n    };\n  }\n}\n",
      "stars": 1618,
      "lastCommitDate": "2024-11-25T14:34:01Z"
    },
    {
      "repository": "getsentry/sentry-react-native",
      "file": "packages/core/android/src/main/java/io/sentry/react/RNSentryPackage.java",
      "url": "https://github.com/getsentry/sentry-react-native/blob/0b9da0a58650fbcd7ee0b8972599c2fcb55108b7/packages/core/android/src/main/java/io/sentry/react/RNSentryPackage.java",
      "fileContent": "package io.sentry.react;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.uimanager.ViewManager;\nimport io.sentry.react.replay.RNSentryReplayMaskManager;\nimport io.sentry.react.replay.RNSentryReplayMaskManagerImpl;\nimport io.sentry.react.replay.RNSentryReplayUnmaskManager;\nimport io.sentry.react.replay.RNSentryReplayUnmaskManagerImpl;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class RNSentryPackage extends TurboReactPackage {\n\n  private static final boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n    if (RNSentryModuleImpl.NAME.equals(name)) {\n      return new RNSentryModule(reactContext);\n    } else if (isTurboModule) {\n      return getFabricComponentNativeModule(name);\n    } else {\n      return null;\n    }\n  }\n\n  private NativeModule getFabricComponentNativeModule(String name) {\n    if (RNSentryReplayMaskManagerImpl.REACT_CLASS.equals(name)) {\n      return new RNSentryReplayMaskManager();\n    } else if (RNSentryReplayUnmaskManagerImpl.REACT_CLASS.equals(name)) {\n      return new RNSentryReplayUnmaskManager();\n    } else {\n      return null;\n    }\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return () -> {\n      final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n      moduleInfos.put(\n          RNSentryModuleImpl.NAME,\n          new ReactModuleInfo(\n              RNSentryModuleImpl.NAME,\n              RNSentryModuleImpl.NAME,\n              false, // canOverrideExistingModule\n              false, // needsEagerInit\n              true, // hasConstants\n              false, // isCxxModule\n              isTurboModule // isTurboModule\n              ));\n      if (isTurboModule) {\n        moduleInfos.put(\n            RNSentryReplayMaskManagerImpl.REACT_CLASS,\n            new ReactModuleInfo(\n                RNSentryReplayMaskManagerImpl.REACT_CLASS, // name\n                RNSentryReplayMaskManagerImpl.REACT_CLASS, // className\n                false, // canOverrideExistingModule\n                false, // needsEagerInit\n                false, // hasConstants, required in RN 0.65\n                false, // isCxxModule\n                true // isTurboModule\n                ));\n        moduleInfos.put(\n            RNSentryReplayUnmaskManagerImpl.REACT_CLASS,\n            new ReactModuleInfo(\n                RNSentryReplayUnmaskManagerImpl.REACT_CLASS, // name\n                RNSentryReplayUnmaskManagerImpl.REACT_CLASS, // className\n                false, // canOverrideExistingModule\n                false, // needsEagerInit\n                false, // hasConstants, required in RN 0.65\n                false, // isCxxModule\n                true // isTurboModule\n                ));\n      }\n      return moduleInfos;\n    };\n  }\n\n  @NonNull\n  @Override\n  public List<ViewManager> createViewManagers(ReactApplicationContext reactContext) {\n    return List.of(\n        new RNSentryOnDrawReporterManager(reactContext),\n        new RNSentryReplayMaskManager(),\n        new RNSentryReplayUnmaskManager());\n  }\n}\n",
      "stars": 1592,
      "lastCommitDate": "2024-12-19T08:26:27Z"
    },
    {
      "repository": "react-native-documents/document-picker",
      "file": "android/src/main/java/com/reactnativedocumentpicker/RNDocumentPickerPackage.java",
      "url": "https://github.com/react-native-documents/document-picker/blob/649fa35a31302fba8d03f46af509d7ae08f87925/android/src/main/java/com/reactnativedocumentpicker/RNDocumentPickerPackage.java",
      "fileContent": "package com.reactnativedocumentpicker;\n\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class RNDocumentPickerPackage extends TurboReactPackage {\n\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n    if (name.equals(RNDocumentPickerModule.NAME)) {\n      return new RNDocumentPickerModule(reactContext);\n    } else {\n      return null;\n    }\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return () -> {\n      boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n      final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n      moduleInfos.put(\n        RNDocumentPickerModule.NAME,\n        new ReactModuleInfo(\n          RNDocumentPickerModule.NAME,\n          RNDocumentPickerModule.NAME,\n//          \"DocumentPickerModule\",\n          false, // canOverrideExistingModule\n          false, // needsEagerInit\n          true, // hasConstants\n          false, // isCxxModule\n          isTurboModule // isTurboModule\n        ));\n      return moduleInfos;\n    };\n  }\n}\n",
      "stars": 1355,
      "lastCommitDate": "2024-09-20T07:20:40Z"
    },
    {
      "repository": "michalchudziak/react-native-geolocation",
      "file": "android/src/main/java/com/reactnativecommunity/geolocation/GeolocationPackage.java",
      "url": "https://github.com/michalchudziak/react-native-geolocation/blob/17b38b4b76fd7ef209644a8c73177a8b069b7d4a/android/src/main/java/com/reactnativecommunity/geolocation/GeolocationPackage.java",
      "fileContent": "\npackage com.reactnativecommunity.geolocation;\n\nimport androidx.annotation.Nullable;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\n\npublic class GeolocationPackage extends TurboReactPackage {\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n    if (name.equals(GeolocationModule.NAME)) {\n        return new RNCGeolocationModule(reactContext);\n    } else {\n        return null;\n    }\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return () -> {\n      final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n      boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n      moduleInfos.put(\n              RNCGeolocationModule.NAME,\n              new ReactModuleInfo(\n                      RNCGeolocationModule.NAME,\n                      RNCGeolocationModule.NAME,\n                      false, // canOverrideExistingModule\n                      false, // needsEagerInit\n                      true, // hasConstants\n                      false, // isCxxModule\n                      isTurboModule // isTurboModule\n      ));\n      return moduleInfos;\n    };\n  }\n}\n",
      "stars": 1341,
      "lastCommitDate": "2024-09-01T08:39:25Z"
    },
    {
      "repository": "margelo/react-native-filament",
      "file": "package/android/src/main/java/com/margelo/filament/FilamentViewPackage.java",
      "url": "https://github.com/margelo/react-native-filament/blob/9a4022281217d0b9e588e0570b600c0c20b5b049/package/android/src/main/java/com/margelo/filament/FilamentViewPackage.java",
      "fileContent": "\npackage com.margelo.filament;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.uimanager.ViewManager;\n\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n// The TurboReactPackage is backwards compatible with old arch\npublic class FilamentViewPackage extends TurboReactPackage {\n    @Nullable\n    @Override\n    public NativeModule getModule(@NonNull String name, @NonNull ReactApplicationContext reactApplicationContext) {\n        if (name.equals(FilamentModule.NAME)) {\n            return new FilamentModule(reactApplicationContext);\n        } else {\n            return null;\n        }\n    }\n\n    @Override\n    public ReactModuleInfoProvider getReactModuleInfoProvider() {\n        return () -> {\n            final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n            moduleInfos.put(\n                    FilamentModule.NAME,\n                    new ReactModuleInfo(\n                            FilamentModule.NAME,\n                            FilamentModule.NAME,\n                            false, // canOverrideExistingModule\n                            false, // needsEagerInit\n                            true, // hasConstants\n                            false, // isCxxModule\n                            true // isTurboModule\n                    ));\n            return moduleInfos;\n        };\n    }\n\n    @NonNull\n    @Override\n    public List<ViewManager> createViewManagers(@NonNull ReactApplicationContext reactContext) {\n        return Collections.singletonList(new FilamentViewManager(reactContext));\n    }\n}\n",
      "stars": 998,
      "lastCommitDate": "2024-10-14T14:41:23Z"
    },
    {
      "repository": "GetStream/stream-chat-react-native",
      "file": "package/native-package/android/src/main/java/com/streamchatreactnative/StreamChatReactNativePackage.java",
      "url": "https://github.com/GetStream/stream-chat-react-native/blob/5825685179f7803007da5eac530e06caf513ec1f/package/native-package/android/src/main/java/com/streamchatreactnative/StreamChatReactNativePackage.java",
      "fileContent": "package com.streamchatreactnative;\n\nimport androidx.annotation.Nullable;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\n\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class StreamChatReactNativePackage extends TurboReactPackage {\n\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n    if (name.equals(StreamChatReactNativeModule.NAME)) {\n        return new StreamChatReactNativeModule(reactContext);\n    } else {\n        return null;\n    }\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return () -> {\n      final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n      boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n      moduleInfos.put(\n              StreamChatReactNativeModule.NAME,\n              new ReactModuleInfo(\n                      StreamChatReactNativeModule.NAME,\n                      StreamChatReactNativeModule.NAME,\n                      false, // canOverrideExistingModule\n                      false, // needsEagerInit\n                      true, // hasConstants\n                      false, // isCxxModule\n                      isTurboModule // isTurboModule\n      ));\n      return moduleInfos;\n    };\n  }\n}\n",
      "stars": 989,
      "lastCommitDate": "2024-12-18T12:13:20Z"
    },
    {
      "repository": "react-native-cameraroll/react-native-cameraroll",
      "file": "android/src/main/java/com/reactnativecommunity/cameraroll/CameraRollPackage.java",
      "url": "https://github.com/react-native-cameraroll/react-native-cameraroll/blob/8a6d1b4279c76e5682a4b443e7a4e111e774ec0a/android/src/main/java/com/reactnativecommunity/cameraroll/CameraRollPackage.java",
      "fileContent": "\npackage com.reactnativecommunity.cameraroll;\n\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.ViewManagerOnDemandReactPackage;\nimport com.facebook.react.bridge.ModuleSpec;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.annotations.ReactModule;\nimport com.facebook.react.module.annotations.ReactModuleList;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.turbomodule.core.interfaces.TurboModule;\nimport com.facebook.react.uimanager.ViewManager;\nimport com.facebook.react.bridge.JavaScriptModule;\n\nimport javax.annotation.Nonnull;\nimport javax.annotation.Nullable;\n\n@ReactModuleList(\n        nativeModules = {\n                CameraRollModule.class,\n        })\npublic class CameraRollPackage extends TurboReactPackage implements ViewManagerOnDemandReactPackage {\n\n    /** {@inheritDoc} */\n    @Override\n    public List<String> getViewManagerNames(ReactApplicationContext reactContext) {\n        return null;\n    }\n\n    @Override\n    protected List<ModuleSpec> getViewManagers(ReactApplicationContext reactContext) {\n        return null;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public @Nullable\n    ViewManager createViewManager(\n            ReactApplicationContext reactContext, String viewManagerName) {\n        return null;\n    }\n\n    @Override\n    public NativeModule getModule(String name, @Nonnull ReactApplicationContext reactContext) {\n        switch (name) {\n            case CameraRollModule.NAME:\n                return new CameraRollModule(reactContext);\n            default:\n                return null;\n        }\n    }\n\n    @Override\n    public ReactModuleInfoProvider getReactModuleInfoProvider() {\n        try {\n            Class<?> reactModuleInfoProviderClass =\n                    Class.forName(\"com.reactnativecommunity.cameraroll.CameraRollPackage$$ReactModuleInfoProvider\");\n            return (ReactModuleInfoProvider) reactModuleInfoProviderClass.newInstance();\n        } catch (ClassNotFoundException e) {\n            // ReactModuleSpecProcessor does not run at build-time. Create this ReactModuleInfoProvider by\n            // hand.\n            return new ReactModuleInfoProvider() {\n                @Override\n                public Map<String, ReactModuleInfo> getReactModuleInfos() {\n                    final Map<String, ReactModuleInfo> reactModuleInfoMap = new HashMap<>();\n\n                    Class<? extends NativeModule>[] moduleList =\n                            new Class[] {\n                                    CameraRollModule.class,\n                            };\n\n                    for (Class<? extends NativeModule> moduleClass : moduleList) {\n                        ReactModule reactModule = moduleClass.getAnnotation(ReactModule.class);\n\n                        reactModuleInfoMap.put(\n                                reactModule.name(),\n                                new ReactModuleInfo(\n                                        reactModule.name(),\n                                        moduleClass.getName(),\n                                        reactModule.canOverrideExistingModule(),\n                                        reactModule.needsEagerInit(),\n                                        reactModule.hasConstants(),\n                                        reactModule.isCxxModule(),\n                                        TurboModule.class.isAssignableFrom(moduleClass)));\n                    }\n\n                    return reactModuleInfoMap;\n                }\n            };\n        } catch (InstantiationException | IllegalAccessException e) {\n            throw new RuntimeException(\n                    \"No ReactModuleInfoProvider for com.reactnativecommunity.cameraroll.CameraRollPackage$$ReactModuleInfoProvider\", e);\n        }\n    }\n\n    @Override\n    public List<NativeModule> createNativeModules(ReactApplicationContext reactContext) {\n        return Arrays.<NativeModule>asList(new CameraRollModule(reactContext));\n    }\n\n    // Deprecated from RN 0.47\n    public List<Class<? extends JavaScriptModule>> createJSModules() {\n        return Collections.emptyList();\n    }\n\n    @Override\n    public List<ViewManager> createViewManagers(ReactApplicationContext reactContext) {\n        return Collections.emptyList();\n    }\n}",
      "stars": 960,
      "lastCommitDate": "2024-11-26T11:07:08Z"
    },
    {
      "repository": "mkuczera/react-native-haptic-feedback",
      "file": "android/src/main/java/com/mkuczera/RNReactNativeHapticFeedbackPackage.java",
      "url": "https://github.com/mkuczera/react-native-haptic-feedback/blob/8cdf0f34df5f8a4921726e191ced864896a30163/android/src/main/java/com/mkuczera/RNReactNativeHapticFeedbackPackage.java",
      "fileContent": "\npackage com.mkuczera;\n\nimport androidx.annotation.Nullable;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.uimanager.ViewManager;\n\nimport java.util.Map;\nimport java.util.HashMap;\n\npublic class RNReactNativeHapticFeedbackPackage extends TurboReactPackage {\n\n    @Nullable\n    @Override\n    public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n        if (name.equals(RNReactNativeHapticFeedbackModuleImpl.NAME)) {\n            return new RNReactNativeHapticFeedbackModule(reactContext);\n        } else {\n            return null;\n        }\n    }\n\n    @Override\n    public ReactModuleInfoProvider getReactModuleInfoProvider() {\n        return () -> {\n            final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n            boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n            moduleInfos.put(\n                    RNReactNativeHapticFeedbackModuleImpl.NAME,\n                    new ReactModuleInfo(\n                            RNReactNativeHapticFeedbackModuleImpl.NAME,\n                            RNReactNativeHapticFeedbackModuleImpl.NAME,\n                            false, // canOverrideExistingModule\n                            false, // needsEagerInit\n                            true, // hasConstants\n                            false, // isCxxModule\n                            isTurboModule // isTurboModule\n            ));\n            return moduleInfos;\n        };\n    }\n}\n",
      "stars": 883,
      "lastCommitDate": "2024-09-18T13:48:54Z"
    },
    {
      "repository": "bugsnag/bugsnag-js",
      "file": "packages/react-native/android/src/newarch/java/com/bugsnag/android/BugsnagPackage.java",
      "url": "https://github.com/bugsnag/bugsnag-js/blob/bc03ca7c1d5d7d12269d32a13b962b4c60f9f5d5/packages/react-native/android/src/newarch/java/com/bugsnag/android/BugsnagPackage.java",
      "fileContent": "package com.bugsnag.android;\n\nimport androidx.annotation.Nullable;\n\nimport java.util.Collections;\nimport java.util.Map;\n\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\n\npublic class BugsnagPackage extends TurboReactPackage {\n\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n    if (name.equals(BugsnagReactNativeImpl.MODULE_NAME)) {\n      return new NativeBugsnagImpl(reactContext);\n    } else {\n      return null;\n    }\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return new ReactModuleInfoProvider() {\n      public Map<String, ReactModuleInfo> getReactModuleInfos() {\n        return Collections.singletonMap(\n          BugsnagReactNativeImpl.MODULE_NAME,\n          new ReactModuleInfo(\n            BugsnagReactNativeImpl.MODULE_NAME,\n            BugsnagReactNativeImpl.MODULE_NAME,\n            false, // canOverrideExistingModule\n            true,  // needsEagerInit\n            false, // hasConstants\n            false, // isCxxModule\n            true   // isTurboModule\n          )\n        );\n      }\n    };\n  }\n}\n",
      "stars": 858,
      "lastCommitDate": "2024-12-18T09:19:33Z"
    },
    {
      "repository": "bugsnag/bugsnag-js",
      "file": "test/react-native/features/fixtures/scenario-launcher/android/src/newarch/java/com/bugsnag/reactnative/test/BugsnagTestInterfacePackage.java",
      "url": "https://github.com/bugsnag/bugsnag-js/blob/bc03ca7c1d5d7d12269d32a13b962b4c60f9f5d5/test/react-native/features/fixtures/scenario-launcher/android/src/newarch/java/com/bugsnag/reactnative/test/BugsnagTestInterfacePackage.java",
      "fileContent": "package com.reactnative.scenarios;\n\nimport androidx.annotation.Nullable;\n\nimport java.util.Collections;\nimport java.util.Map;\n\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\n\npublic class BugsnagTestInterfacePackage extends TurboReactPackage {\n\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n    if (name.equals(BugsnagTestInterfaceImpl.MODULE_NAME)) {\n      return new NativeBugsnagTestInterfaceModule(reactContext);\n    } else {\n      return null;\n    }\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return new ReactModuleInfoProvider() {\n      public Map<String, ReactModuleInfo> getReactModuleInfos() {\n        return Collections.singletonMap(\n          BugsnagTestInterfaceImpl.MODULE_NAME,\n          new ReactModuleInfo(\n            BugsnagTestInterfaceImpl.MODULE_NAME,\n            BugsnagTestInterfaceImpl.MODULE_NAME,\n            false, // canOverrideExistingModule\n            true,  // needsEagerInit\n            false, // hasConstants\n            false, // isCxxModule\n            true   // isTurboModule\n          )\n        );\n      }\n    };\n  }\n  \n}\n",
      "stars": 858,
      "lastCommitDate": "2024-12-18T09:19:33Z"
    },
    {
      "repository": "mrousavy/nitro",
      "file": "packages/react-native-nitro-image/android/src/main/java/com/margelo/nitro/image/NitroImagePackage.java",
      "url": "https://github.com/mrousavy/nitro/blob/82ccff24bcd1ffd408d459609cc1fb94227c4023/packages/react-native-nitro-image/android/src/main/java/com/margelo/nitro/image/NitroImagePackage.java",
      "fileContent": "package com.margelo.nitro.image;\n\nimport android.util.Log;\n\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\nimport com.margelo.nitro.core.HybridObject;\nimport com.margelo.nitro.core.HybridObjectRegistry;\n\nimport java.util.HashMap;\nimport java.util.function.Supplier;\n\npublic class NitroImagePackage extends TurboReactPackage {\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n    return null;\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return () -> {\n        return new HashMap<>();\n    };\n  }\n\n  static {\n    System.loadLibrary(\"NitroImage\");\n  }\n}\n",
      "stars": 731,
      "lastCommitDate": "2024-12-18T15:59:06Z"
    },
    {
      "repository": "react-native-clipboard/clipboard",
      "file": "android/src/main/java/com/reactnativecommunity/clipboard/ClipboardPackage.java",
      "url": "https://github.com/react-native-clipboard/clipboard/blob/500c0b1125af1f76474d9f621e6605eee37e389c/android/src/main/java/com/reactnativecommunity/clipboard/ClipboardPackage.java",
      "fileContent": "package com.reactnativecommunity.clipboard;\n\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.ViewManagerOnDemandReactPackage;\nimport com.facebook.react.bridge.ModuleSpec;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.annotations.ReactModule;\nimport com.facebook.react.module.annotations.ReactModuleList;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.turbomodule.core.interfaces.TurboModule;\nimport com.facebook.react.uimanager.ViewManager;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport javax.annotation.Nonnull;\n\n@ReactModuleList(\n        nativeModules = {\n                ClipboardModule.class,\n        })\npublic class ClipboardPackage extends TurboReactPackage implements ViewManagerOnDemandReactPackage {\n\n  /** {@inheritDoc} */\n  @Override\n  public List<String> getViewManagerNames(ReactApplicationContext reactContext) {\n    return null;\n  }\n\n  @Override\n  protected List<ModuleSpec> getViewManagers(ReactApplicationContext reactContext) {\n    return null;\n  }\n\n  /** {@inheritDoc} */\n  @Override\n  public @Nullable ViewManager createViewManager(\n          ReactApplicationContext reactContext, String viewManagerName) {\n    return null;\n  }\n\n  @Override\n  public NativeModule getModule(String name, @Nonnull ReactApplicationContext reactContext) {\n    switch (name) {\n      case ClipboardModule.NAME:\n        return new ClipboardModule(reactContext);\n      default:\n        return null;\n    }\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    try {\n      Class<?> reactModuleInfoProviderClass =\n              Class.forName(\"com.reactnativecommunity.clipboard.ClipboardPackage$$ReactModuleInfoProvider\");\n      return (ReactModuleInfoProvider) reactModuleInfoProviderClass.newInstance();\n    } catch (ClassNotFoundException e) {\n      // ReactModuleSpecProcessor does not run at build-time. Create this ReactModuleInfoProvider by\n      // hand.\n      return new ReactModuleInfoProvider() {\n        @Override\n        public Map<String, ReactModuleInfo> getReactModuleInfos() {\n          final Map<String, ReactModuleInfo> reactModuleInfoMap = new HashMap<>();\n\n          Class<? extends NativeModule>[] moduleList =\n                  new Class[] {\n                          ClipboardModule.class,\n                  };\n\n          for (Class<? extends NativeModule> moduleClass : moduleList) {\n            ReactModule reactModule = moduleClass.getAnnotation(ReactModule.class);\n\n            reactModuleInfoMap.put(\n                    reactModule.name(),\n                    new ReactModuleInfo(\n                            reactModule.name(),\n                            moduleClass.getName(),\n                            reactModule.canOverrideExistingModule(),\n                            reactModule.needsEagerInit(),\n                            reactModule.hasConstants(),\n                            reactModule.isCxxModule(),\n                            TurboModule.class.isAssignableFrom(moduleClass)));\n          }\n\n          return reactModuleInfoMap;\n        }\n      };\n    } catch (InstantiationException | IllegalAccessException e) {\n      throw new RuntimeException(\n              \"No ReactModuleInfoProvider for com.reactnativecommunity.clipboard.ClipboardPackage$$ReactModuleInfoProvider\", e);\n    }\n  }\n  @Override\n  public List<ViewManager> createViewManagers(ReactApplicationContext reactContext) {\n    return Collections.emptyList();\n  }\n\n  @Override\n  public List<NativeModule> createNativeModules(ReactApplicationContext reactContext) {\n    List<NativeModule> modules = new ArrayList<>();\n\n    modules.add(new ClipboardModule(reactContext));\n\n    return modules;\n  }\n}\n",
      "stars": 703,
      "lastCommitDate": "2024-11-26T15:11:14Z"
    },
    {
      "repository": "AgoraIO-Extensions/react-native-agora",
      "file": "android/src/main/java/io/agora/rtc/ng/react/AgoraRtcNgPackage.java",
      "url": "https://github.com/AgoraIO-Extensions/react-native-agora/blob/d1c3ba30bf0ca112244056e936af926c0506e71c/android/src/main/java/io/agora/rtc/ng/react/AgoraRtcNgPackage.java",
      "fileContent": "package io.agora.rtc.ng.react;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.bridge.ModuleHolder;\nimport com.facebook.react.bridge.ModuleSpec;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.uimanager.ViewManager;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class AgoraRtcNgPackage extends TurboReactPackage {\n\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n    if (name.equals(AgoraRtcNgModule.NAME)) {\n      return new AgoraRtcNgModule(reactContext);\n    } else {\n      return null;\n    }\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return () -> {\n      final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n      boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n      moduleInfos.put(\n        AgoraRtcNgModule.NAME,\n        new ReactModuleInfo(\n          AgoraRtcNgModule.NAME,\n          AgoraRtcNgModule.NAME,\n          false, // canOverrideExistingModule\n          false, // needsEagerInit\n          true, // hasConstants\n          false, // isCxxModule\n          isTurboModule // isTurboModule\n        ));\n      return moduleInfos;\n    };\n  }\n\n  @NonNull\n  @Override\n  public List<ViewManager> createViewManagers(ReactApplicationContext reactContext) {\n    List<ViewManager> viewManagers = new ArrayList<>();\n    viewManagers.add(new AgoraRtcSurfaceViewManager());\n    viewManagers.add(new AgoraRtcTextureViewManager());\n    return viewManagers;\n  }\n}\n",
      "stars": 626,
      "lastCommitDate": "2024-12-11T07:48:13Z"
    },
    {
      "repository": "sAleksovski/react-native-android-widget",
      "file": "android/src/main/java/com/reactnativeandroidwidget/AndroidWidgetPackage.java",
      "url": "https://github.com/sAleksovski/react-native-android-widget/blob/a181b2ea02fd2ad22b722687843225cad9a9a3d4/android/src/main/java/com/reactnativeandroidwidget/AndroidWidgetPackage.java",
      "fileContent": "package com.reactnativeandroidwidget;\n\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class AndroidWidgetPackage extends TurboReactPackage {\n\n    @Nullable\n    @Override\n    public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n        if (name.equals(AndroidWidgetModule.NAME)) {\n            return new AndroidWidgetModule(reactContext);\n        } else {\n            return null;\n        }\n    }\n\n    @Override\n    public ReactModuleInfoProvider getReactModuleInfoProvider() {\n        return () -> {\n            final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n            boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n            moduleInfos.put(\n                AndroidWidgetModule.NAME,\n                new ReactModuleInfo(\n                    AndroidWidgetModule.NAME,\n                    AndroidWidgetModule.NAME,\n                    false, // canOverrideExistingModule\n                    false, // needsEagerInit\n                    true, // hasConstants\n                    false, // isCxxModule\n                    isTurboModule // isTurboModule\n                )\n            );\n            return moduleInfos;\n        };\n    }\n}\n",
      "stars": 616,
      "lastCommitDate": "2024-11-28T20:15:03Z"
    },
    {
      "repository": "grahammendick/navigation",
      "file": "NavigationReactNative/src/android/src/main/java/com/navigation/reactnative/newarch/NavigationPackage.java",
      "url": "https://github.com/grahammendick/navigation/blob/db6fb605b3b1d909f1d12b9252716d1809d4d87a/NavigationReactNative/src/android/src/main/java/com/navigation/reactnative/newarch/NavigationPackage.java",
      "fileContent": "package com.navigation.reactnative;\n\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.ReactPackage;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.uimanager.ViewManager;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class NavigationPackage extends TurboReactPackage implements ReactPackage {\n\n    @Override\n    public List<ViewManager> createViewManagers(ReactApplicationContext reactContext) {\n        return Arrays.<ViewManager>asList(\n            new ActionBarViewManager(),\n            new BarButtonViewManager(),\n            new BottomAppBarViewManager(),\n            new BottomSheetViewManager(),\n            new BottomSheetDialogViewManager(),\n            new CollapsingBarViewManager(),\n            new CoordinatorLayoutViewManager(),\n            new DialogViewManager(),\n            new DrawerLayoutViewManager(),\n            new DrawerViewManager(),\n            new ExtendedFloatingActionButtonViewManager(),\n            new FloatingActionButtonViewManager(),\n            new NavigationBarViewManager(),\n            new NavigationStackViewManager(),\n            new SceneViewManager(),\n            new SearchBarViewManager(),\n            new SearchResultsViewManager(),\n            new SearchToolbarViewManager(),\n            new SharedElementViewManager(),\n            new SheetViewManager(),\n            new StatusBarViewManager(),\n            new TabBarViewManager(),\n            new TabBarItemViewManager(),\n            new TabBarPagerItemViewManager(),\n            new TabBarPagerViewManager(),\n            new TabBarPagerRTLViewManager(),\n            new TabLayoutViewManager(),\n            new TabLayoutRTLViewManager(),\n            new TabNavigationViewManager(),\n            new TitleBarViewManager(),\n            new ToolbarViewManager()\n        );\n    }\n\n    @Override\n    public List<NativeModule> createNativeModules(ReactApplicationContext reactContext) {\n        return new ArrayList<>();\n    }\n\n    @Nullable\n    @Override\n    public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n        if (name.equals(\"Material3\")) {\n            return new Material3Module(reactContext);\n        } else {\n            return null;\n        }\n    }\n\n    @Override\n    public ReactModuleInfoProvider getReactModuleInfoProvider() {\n        return () -> {\n            final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n            moduleInfos.put(\n                \"Material3\",\n                new ReactModuleInfo(\n                    \"Material3\",\n                    \"Material3\",\n                    false,\n                    false,\n                    true,\n                    false,\n                    true\n            ));\n            return moduleInfos;\n        };\n    }\n}\n",
      "stars": 598,
      "lastCommitDate": "2024-12-15T16:22:32Z"
    },
    {
      "repository": "margelo/react-native-worklets-core",
      "file": "android/src/main/java/com/worklets/WorkletsPackage.java",
      "url": "https://github.com/margelo/react-native-worklets-core/blob/e4076029f90def2ababc761bc5baf72d77866399/android/src/main/java/com/worklets/WorkletsPackage.java",
      "fileContent": "package com.worklets;\n\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.annotations.ReactModule;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.turbomodule.core.interfaces.TurboModule;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class WorkletsPackage extends TurboReactPackage {\n\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n    if (name.equals(WorkletsModule.NAME)) {\n      return new WorkletsModule(reactContext);\n    } else {\n      return null;\n    }\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return () -> {\n      final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n      Class<? extends NativeModule> moduleClass = WorkletsModule.class;\n      ReactModule reactModule = moduleClass.getAnnotation(ReactModule.class);\n      moduleInfos.put(\n              reactModule.name(),\n              new ReactModuleInfo(\n                  reactModule.name(),\n                  moduleClass.getName(),\n                  true,\n                  reactModule.needsEagerInit(),\n                  reactModule.hasConstants(),\n                  reactModule.isCxxModule(),\n                  TurboModule.class.isAssignableFrom(moduleClass)));\n      return moduleInfos;\n    };\n  }\n}\n",
      "stars": 588,
      "lastCommitDate": "2024-11-07T14:44:54Z"
    },
    {
      "repository": "baronha/react-native-multiple-image-picker",
      "file": "android/src/main/java/com/margelo/nitro/multipleimagepicker/MultipleImagePickerPackage.java",
      "url": "https://github.com/baronha/react-native-multiple-image-picker/blob/9cb98547129b4a11085a65c13771746d3f513c03/android/src/main/java/com/margelo/nitro/multipleimagepicker/MultipleImagePickerPackage.java",
      "fileContent": "package com.margelo.nitro.multipleimagepicker;\n\n\nimport android.util.Log;\n\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\nimport com.margelo.nitro.core.HybridObject;\nimport com.margelo.nitro.core.HybridObjectRegistry;\n\nimport java.util.HashMap;\nimport java.util.function.Supplier;\n\npublic class MultipleImagePickerPackage extends TurboReactPackage {\n    @Nullable\n    @Override\n    public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n        return null;\n    }\n\n    @Override\n    public ReactModuleInfoProvider getReactModuleInfoProvider() {\n        return () -> {\n            return new HashMap<>();\n        };\n    }\n\n    static {\n        System.loadLibrary(\"MultipleImagePicker\");\n    }\n}",
      "stars": 533,
      "lastCommitDate": "2024-12-18T10:00:25Z"
    },
    {
      "repository": "mybigday/whisper.rn",
      "file": "android/src/main/java/com/rnwhisper/RNWhisperPackage.java",
      "url": "https://github.com/mybigday/whisper.rn/blob/844cbde318fe8962d0d378e0c093f3cb8000f9a0/android/src/main/java/com/rnwhisper/RNWhisperPackage.java",
      "fileContent": "package com.rnwhisper;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\n\nimport java.util.List;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class RNWhisperPackage extends TurboReactPackage {\n\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n    if (name.equals(RNWhisperModule.NAME)) {\n      return new com.rnwhisper.RNWhisperModule(reactContext);\n    } else {\n      return null;\n    }\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return () -> {\n      final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n      boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n      moduleInfos.put(\n        RNWhisperModule.NAME,\n        new ReactModuleInfo(\n          RNWhisperModule.NAME,\n          RNWhisperModule.NAME,\n          false, // canOverrideExistingModule\n          false, // needsEagerInit\n          true, // hasConstants\n          false, // isCxxModule\n          isTurboModule // isTurboModule\n        )\n      );\n      return moduleInfos;\n    };\n  }\n}\n",
      "stars": 408,
      "lastCommitDate": "2024-12-02T05:12:58Z"
    },
    {
      "repository": "WadhahEssam/react-native-theme-switch-animation",
      "file": "android/src/main/java/com/themeswitchanimation/ThemeSwitchAnimationPackage.java",
      "url": "https://github.com/WadhahEssam/react-native-theme-switch-animation/blob/f350716642f2cb49967837d6baed23d0346dbdd4/android/src/main/java/com/themeswitchanimation/ThemeSwitchAnimationPackage.java",
      "fileContent": "package com.themeswitchanimation;\n\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ThemeSwitchAnimationPackage extends TurboReactPackage {\n\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n    if (name.equals(ThemeSwitchAnimationModule.NAME)) {\n      return new ThemeSwitchAnimationModule(reactContext);\n    } else {\n      return null;\n    }\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return () -> {\n      final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n      boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n      moduleInfos.put(\n              ThemeSwitchAnimationModule.NAME,\n              new ReactModuleInfo(\n                      ThemeSwitchAnimationModule.NAME,\n                      ThemeSwitchAnimationModule.NAME,\n                      false, // canOverrideExistingModule\n                      false, // needsEagerInit\n                      true, // hasConstants\n                      false, // isCxxModule\n                      isTurboModule // isTurboModule\n      ));\n      return moduleInfos;\n    };\n  }\n}\n",
      "stars": 362,
      "lastCommitDate": "2024-08-16T22:04:34Z"
    },
    {
      "repository": "guhungry/react-native-photo-manipulator",
      "file": "android/src/main/java/com/guhungry/rnphotomanipulator/RNPhotoManipulatorPackage.java",
      "url": "https://github.com/guhungry/react-native-photo-manipulator/blob/900290ed5bdc9f9c008bcd2d9b35b9822f2335cb/android/src/main/java/com/guhungry/rnphotomanipulator/RNPhotoManipulatorPackage.java",
      "fileContent": "\npackage com.guhungry.rnphotomanipulator;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.ReactPackage;\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.uimanager.ViewManager;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class RNPhotoManipulatorPackage extends TurboReactPackage implements ReactPackage {\n    @NonNull\n    @Override\n    public List<NativeModule> createNativeModules(ReactApplicationContext reactContext) {\n        List<NativeModule> modules = new ArrayList<>();\n        modules.add(new RNPhotoManipulatorModule(reactContext));\n        return modules;\n    }\n\n    @NonNull\n    @Override\n    public List<ViewManager> createViewManagers(ReactApplicationContext reactContext) {\n        return Collections.emptyList();\n    }\n\n    @Nullable\n    @Override\n    public NativeModule getModule(@NonNull String name, @NonNull ReactApplicationContext reactContext) {\n        if (name.equals(RNPhotoManipulatorModule.NAME)) {\n            return new RNPhotoManipulatorModule(reactContext);\n        }\n        return null;\n    }\n\n    @Override\n    public ReactModuleInfoProvider getReactModuleInfoProvider() {\n        return () -> {\n            final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n            boolean turboModulesEnabled = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n            moduleInfos.put(\n                    RNPhotoManipulatorModule.NAME,\n                    new ReactModuleInfo(\n                            RNPhotoManipulatorModule.NAME,\n                            RNPhotoManipulatorModule.NAME,\n                            false, // canOverrideExistingModule\n                            false, // needsEagerInit\n                            false, // hasConstants\n                            false, // isCxxModule\n                            turboModulesEnabled // isTurboModule\n                    ));\n            return moduleInfos;\n        };\n    }\n}\n",
      "stars": 349,
      "lastCommitDate": "2024-11-12T15:45:26Z"
    },
    {
      "repository": "prisma/react-native-prisma",
      "file": "android/src/main/java/com/prisma/PrismaPackage.java",
      "url": "https://github.com/prisma/react-native-prisma/blob/78fa48b7c9b67757b4ecd10a713fe8c0964cb78f/android/src/main/java/com/prisma/PrismaPackage.java",
      "fileContent": "package com.prisma;\n\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class PrismaPackage extends TurboReactPackage {\n\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n    if (name.equals(PrismaModule.NAME)) {\n      return new PrismaModule(reactContext);\n    } else {\n      return null;\n    }\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return () -> {\n      final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n      boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n      moduleInfos.put(\n              PrismaModule.NAME,\n              new ReactModuleInfo(\n                      PrismaModule.NAME,\n                      PrismaModule.NAME,\n                      false, // canOverrideExistingModule\n                      false, // needsEagerInit\n                      true, // hasConstants\n                      false, // isCxxModule\n                      isTurboModule // isTurboModule\n      ));\n      return moduleInfos;\n    };\n  }\n}\n",
      "stars": 217,
      "lastCommitDate": "2024-12-16T14:45:03Z"
    },
    {
      "repository": "mybigday/react-native-external-display",
      "file": "packages/react-native-external-display/android/src/main/java/com/externaldisplay/RNExternalDisplayPackage.java",
      "url": "https://github.com/mybigday/react-native-external-display/blob/8c5d7684c2d287d6a5252719227c74c73d796fa2/packages/react-native-external-display/android/src/main/java/com/externaldisplay/RNExternalDisplayPackage.java",
      "fileContent": "package com.externaldisplay;\n\nimport androidx.annotation.Nullable;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.uimanager.ViewManager;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport android.util.Log;\n\npublic class RNExternalDisplayPackage extends TurboReactPackage {\n\n  @Override\n  public List<ViewManager> createViewManagers(ReactApplicationContext reactContext) {\n    List<ViewManager> viewManagers = new ArrayList<>();\n    viewManagers.add(new RNExternalDisplayManager(reactContext));\n    return viewManagers;\n  }\n\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n    if (name.equals(RNExternalDisplayModule.REACT_CLASS)) {\n      return new com.externaldisplay.RNExternalDisplayModule(reactContext);\n    } else {\n      return null;\n    }\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return () -> {\n      final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n      boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n      moduleInfos.put(\n        RNExternalDisplayModule.REACT_CLASS,\n        new ReactModuleInfo(\n          RNExternalDisplayModule.REACT_CLASS,\n          RNExternalDisplayModule.REACT_CLASS,\n          false, // canOverrideExistingModule\n          false, // needsEagerInit\n          true, // hasConstants\n          false, // isCxxModule\n          isTurboModule // isTurboModule\n        )\n      );\n      moduleInfos.put(\n        RNExternalDisplayManager.REACT_CLASS,\n        new ReactModuleInfo(\n          RNExternalDisplayManager.REACT_CLASS,\n          RNExternalDisplayManager.REACT_CLASS,\n          false, // canOverrideExistingModule\n          false, // needsEagerInit\n          true, // hasConstants\n          false, // isCxxModule\n          isTurboModule // isTurboModule\n        )\n      );\n      return moduleInfos;\n    };\n  }\n}\n",
      "stars": 215,
      "lastCommitDate": "2024-09-01T01:23:45Z"
    },
    {
      "repository": "callstackincubator/react-native-fast-io",
      "file": "packages/react-native-fast-io/android/src/main/java/com/margelo/nitro/fastio/FastIOPackage.java",
      "url": "https://github.com/callstackincubator/react-native-fast-io/blob/7995d82d30b11cfb1f01ed65e99041ab3d31089c/packages/react-native-fast-io/android/src/main/java/com/margelo/nitro/fastio/FastIOPackage.java",
      "fileContent": "package com.margelo.nitro.fastio;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\n\nimport java.util.HashMap;\n\npublic class FastIOPackage extends TurboReactPackage {\n  @Nullable\n  @Override\n  public NativeModule getModule(@NonNull String name, @NonNull ReactApplicationContext reactContext) {\n    return null;\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return HashMap::new;\n  }\n\n  static {\n    System.loadLibrary(\"FastIO\");\n  }\n}\n",
      "stars": 192,
      "lastCommitDate": "2024-12-03T09:02:36Z"
    },
    {
      "repository": "frw/react-native-ssl-public-key-pinning",
      "file": "android/src/main/java/com/sslpublickeypinning/SslPublicKeyPinningPackage.java",
      "url": "https://github.com/frw/react-native-ssl-public-key-pinning/blob/32dd20fc014af1f7f646d2b9abf8932d1eb9ad8e/android/src/main/java/com/sslpublickeypinning/SslPublicKeyPinningPackage.java",
      "fileContent": "package com.sslpublickeypinning;\n\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class SslPublicKeyPinningPackage extends TurboReactPackage {\n\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n    if (name.equals(SslPublicKeyPinningModule.NAME)) {\n      return new SslPublicKeyPinningModule(reactContext);\n    } else {\n      return null;\n    }\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return () -> {\n      final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n      boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n      moduleInfos.put(\n        SslPublicKeyPinningModule.NAME,\n        new ReactModuleInfo(\n          SslPublicKeyPinningModule.NAME,\n          SslPublicKeyPinningModule.NAME,\n          false, // canOverrideExistingModule\n          false, // needsEagerInit\n          true, // hasConstants\n          false, // isCxxModule\n          isTurboModule // isTurboModule\n        ));\n      return moduleInfos;\n    };\n  }\n}\n",
      "stars": 187,
      "lastCommitDate": "2024-11-10T13:26:06Z"
    },
    {
      "repository": "plaid/react-native-plaid-link-sdk",
      "file": "android/src/main/java/com/plaid/PlaidPackage.java",
      "url": "https://github.com/plaid/react-native-plaid-link-sdk/blob/934e3f92b858cbe81db119361a31befad8c59db4/android/src/main/java/com/plaid/PlaidPackage.java",
      "fileContent": "package com.plaid;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.ViewManagerOnDemandReactPackage;\nimport com.facebook.react.bridge.ModuleSpec;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.common.MapBuilder;\nimport com.facebook.react.module.annotations.ReactModule;\nimport com.facebook.react.module.annotations.ReactModuleList;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.uimanager.ViewManager;\n\nimport javax.annotation.Nonnull;\nimport javax.annotation.Nullable;\nimport javax.inject.Provider;\n\n@ReactModuleList(nativeModules = {PlaidModule.class})\npublic class PlaidPackage extends TurboReactPackage implements ViewManagerOnDemandReactPackage {\n\n  private @Nullable Map<String, ModuleSpec> mViewManagers;\n\n  private Map<String, ModuleSpec> getViewManagersMap(final ReactApplicationContext reactContext) {\n    if (mViewManagers == null) {\n      Map<String, ModuleSpec> specs = MapBuilder.newHashMap();\n      specs.put(\n              PLKEmbeddedViewManager.REACT_CLASS,\n              ModuleSpec.viewManagerSpec(\n                      new Provider<NativeModule>() {\n                        @Override\n                        public NativeModule get() {\n                          return new PLKEmbeddedViewManager();\n                        }\n                      }));\n      mViewManagers = specs;\n    }\n    return mViewManagers;\n  }\n\n  /** {@inheritDoc} */\n  @Override\n  public List<String> getViewManagerNames(ReactApplicationContext reactContext) {\n    return new ArrayList<>(getViewManagersMap(reactContext).keySet());\n  }\n\n  @Override\n  protected List<ModuleSpec> getViewManagers(ReactApplicationContext reactContext) {\n    return new ArrayList<>(getViewManagersMap(reactContext).values());\n  }\n\n  /** {@inheritDoc} */\n  @Override\n  public @Nullable ViewManager createViewManager(\n          ReactApplicationContext reactContext, String viewManagerName) {\n    ModuleSpec spec = getViewManagersMap(reactContext).get(viewManagerName);\n    return spec != null ? (ViewManager) spec.getProvider().get() : null;\n  }\n\n  @Override\n  public NativeModule getModule(String name, @Nonnull ReactApplicationContext reactContext) {\n    switch (name) {\n      case PlaidModule.NAME:\n        return new PlaidModule(reactContext);\n      default:\n        return null;\n    }\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    try {\n      Class<?> reactModuleInfoProviderClass =\n              Class.forName(\"com.plaid.PlaidPackage$$ReactModuleInfoProvider\");\n      return (ReactModuleInfoProvider) reactModuleInfoProviderClass.newInstance();\n    } catch (ClassNotFoundException e) {\n      // ReactModuleSpecProcessor does not run at build-time. Create this ReactModuleInfoProvider by\n      // hand.\n      return new ReactModuleInfoProvider() {\n        @Override\n        public Map<String, ReactModuleInfo> getReactModuleInfos() {\n          final Map<String, ReactModuleInfo> reactModuleInfoMap = new HashMap<>();\n\n          Class<? extends NativeModule>[] moduleList =\n                  new Class[]{\n                          PlaidModule.class,\n                  };\n\n          for (Class<? extends NativeModule> moduleClass : moduleList) {\n            ReactModule reactModule = moduleClass.getAnnotation(ReactModule.class);\n\n            reactModuleInfoMap.put(\n                    reactModule.name(),\n                    new ReactModuleInfo(\n                            reactModule.name(),\n                            moduleClass.getName(),\n                            reactModule.canOverrideExistingModule(),\n                            reactModule.needsEagerInit(),\n                            reactModule.hasConstants(),\n                            reactModule.isCxxModule(),\n                            BuildConfig.IS_NEW_ARCHITECTURE_ENABLED));\n          }\n\n          return reactModuleInfoMap;\n        }\n      };\n    } catch (InstantiationException | IllegalAccessException e) {\n      throw new RuntimeException(\n              \"No ReactModuleInfoProvider for com.plaid.PlaidPackage$$ReactModuleInfoProvider\", e);\n    }\n  }\n}\n",
      "stars": 174,
      "lastCommitDate": "2024-12-06T19:58:20Z"
    },
    {
      "repository": "Hector-Chong/native-wechat",
      "file": "android/src/newarch/java/com/hector/nativewechat/NativeWechatPackage.java",
      "url": "https://github.com/Hector-Chong/native-wechat/blob/4ed3429acad42b91e09e3d319cc16eacd1ea117a/android/src/newarch/java/com/hector/nativewechat/NativeWechatPackage.java",
      "fileContent": "package com.hector.nativewechat;\n\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\nimport com.hector.nativewechat.NativeWechatModule;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class NativeWechatPackage extends TurboReactPackage {\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n    if (name.equals(NativeWechatModuleImpl.NAME)) {\n      return new NativeWechatModule(reactContext);\n    } else {\n      return null;\n    }\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return () -> {\n      final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n      boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n\n      moduleInfos.put(\n        NativeWechatModuleImpl.NAME,\n        new ReactModuleInfo(\n          NativeWechatModuleImpl.NAME,\n          NativeWechatModuleImpl.NAME,\n          false,\n          false,\n          true,\n          false,\n          isTurboModule\n        ));\n\n      return moduleInfos;\n    };\n  }\n\n}\n",
      "stars": 146,
      "lastCommitDate": "2024-12-01T16:01:35Z"
    },
    {
      "repository": "BeTomorrow/react-native-file-logger",
      "file": "android/src/main/java/com/betomorrow/rnfilelogger/FileLoggerPackage.java",
      "url": "https://github.com/BeTomorrow/react-native-file-logger/blob/d3747918772e9f2c1c05abab85f9625b0afd062a/android/src/main/java/com/betomorrow/rnfilelogger/FileLoggerPackage.java",
      "fileContent": "package com.betomorrow.rnfilelogger;\n\nimport androidx.annotation.Nullable;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\n\npublic class FileLoggerPackage extends TurboReactPackage {\n\n    @Nullable\n    @Override\n    public NativeModule getModule(String name, ReactApplicationContext reactApplicationContext) {\n        if (name.equals(FileLoggerModule.NAME)) {\n            return (NativeModule) new FileLoggerModule(reactApplicationContext);\n        } else {\n            return null;\n        }\n    }\n    @Override\n    public ReactModuleInfoProvider getReactModuleInfoProvider() {\n        return () -> {\n            final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n            boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n            moduleInfos.put(\n                    FileLoggerModule.NAME,\n                    new ReactModuleInfo(\n                            FileLoggerModule.NAME,\n                            FileLoggerModule.NAME,\n                            false, // canOverrideExistingModule\n                            false, // needsEagerInit\n                            true, // hasConstants\n                            false, // isCxxModule\n                            isTurboModule // isTurboModule\n                    ));\n            return moduleInfos;\n        };\n    }\n}\n",
      "stars": 120,
      "lastCommitDate": "2024-08-19T09:43:18Z"
    },
    {
      "repository": "kumparan/react-native-android-inapp-updates",
      "file": "android/src/main/java/com/agastya/androidinappupdates/AndroidInappUpdatesPackage.java",
      "url": "https://github.com/kumparan/react-native-android-inapp-updates/blob/e0ca137a653ed09b888b68b8b5971c7ce16b98aa/android/src/main/java/com/agastya/androidinappupdates/AndroidInappUpdatesPackage.java",
      "fileContent": "package com.agastya.androidinappupdates;\n\nimport androidx.annotation.Nullable;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\n\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class AndroidInappUpdatesPackage extends TurboReactPackage {\n\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n    if (name.equals(AndroidInappUpdateModule.NAME)) {\n      return new AndroidInappUpdateModule(reactContext);\n    }\n    return null;\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return () -> {\n      final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n      boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n      moduleInfos.put(\n        AndroidInappUpdateModule.NAME,\n        new ReactModuleInfo(\n          AndroidInappUpdateModule.NAME,\n          AndroidInappUpdateModule.NAME,\n          false, // canOverrideExistingModule\n          false, // needsEagerInit\n          true, // hasConstants\n          false, // isCxxModule\n          isTurboModule // isTurboModule\n        )\n      );\n      return moduleInfos;\n    };\n  }\n}\n\n",
      "stars": 103,
      "lastCommitDate": "2024-01-05T08:22:31Z"
    },
    {
      "repository": "fabOnReact/react-native-wear-connectivity",
      "file": "android/src/main/java/com/wearconnectivity/WearConnectivityPackage.java",
      "url": "https://github.com/fabOnReact/react-native-wear-connectivity/blob/318c6325fc55afd816efc542eef6bec47527c845/android/src/main/java/com/wearconnectivity/WearConnectivityPackage.java",
      "fileContent": "package com.wearconnectivity;\n\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class WearConnectivityPackage extends TurboReactPackage {\n\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n    if (name.equals(WearConnectivityModule.NAME)) {\n      return new WearConnectivityModule(reactContext);\n    } else {\n      return null;\n    }\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return () -> {\n      final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n      boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n      moduleInfos.put(\n              WearConnectivityModule.NAME,\n              new ReactModuleInfo(\n                      WearConnectivityModule.NAME,\n                      WearConnectivityModule.NAME,\n                      false, // canOverrideExistingModule\n                      false, // needsEagerInit\n                      true, // hasConstants\n                      false, // isCxxModule\n                      isTurboModule // isTurboModule\n      ));\n      return moduleInfos;\n    };\n  }\n}\n",
      "stars": 103,
      "lastCommitDate": "2024-08-11T00:59:56Z"
    },
    {
      "repository": "mateusz1913/rnbridgingtutorial",
      "file": "app-info-package-classic/android/src/main/java/com/appinfopackageclassic/AppInfoClassicTurboPackage.java",
      "url": "https://github.com/mateusz1913/rnbridgingtutorial/blob/5ffbcb451066cd43807337a3c1a42c26402a814f/app-info-package-classic/android/src/main/java/com/appinfopackageclassic/AppInfoClassicTurboPackage.java",
      "fileContent": "package com.appinfopackageclassic;\n\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.annotations.ReactModule;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.turbomodule.core.interfaces.TurboModule;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class AppInfoClassicTurboPackage extends TurboReactPackage {\n    /**\n     * Initialize and export modules based on the name of the required module\n     */\n    @Override\n    @Nullable\n    public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n        if (name.equals(AppInfoModuleClassic.NAME)) {\n            return new AppInfoModuleClassic(reactContext);\n        }\n        return null;\n    }\n\n    /**\n     * Declare info about exported modules\n     */\n    @Override\n    public ReactModuleInfoProvider getReactModuleInfoProvider() {\n        /**\n         * Here declare the array of exported modules\n         */\n        Class<? extends NativeModule>[] moduleList = new Class[] {\n            AppInfoModuleClassic.class\n        };\n        final Map<String, ReactModuleInfo> reactModuleInfoMap = new HashMap<>();\n        /**\n         * And here just iterate on that array and produce the info provider instance\n         */\n        for (Class<? extends NativeModule> moduleClass : moduleList) {\n            ReactModule reactModule = moduleClass.getAnnotation(ReactModule.class);\n\n            reactModuleInfoMap.put(\n                reactModule.name(),\n                new ReactModuleInfo(\n                    reactModule.name(),\n                    moduleClass.getName(),\n                    true,\n                    reactModule.needsEagerInit(),\n                    reactModule.hasConstants(),\n                    reactModule.isCxxModule(),\n                    TurboModule.class.isAssignableFrom(moduleClass)\n                )\n            );\n        }\n\n        return new ReactModuleInfoProvider() {\n            @Override\n            public Map<String, ReactModuleInfo> getReactModuleInfos() {\n                return reactModuleInfoMap;\n            }\n        };\n    }\n}\n",
      "stars": 70,
      "lastCommitDate": "2024-06-02T08:49:10Z"
    },
    {
      "repository": "mateusz1913/rnbridgingtutorial",
      "file": "native-list-package-classic/android/src/main/java/com/nativelistpackageclassic/NativeListClassicTurboPackage.java",
      "url": "https://github.com/mateusz1913/rnbridgingtutorial/blob/5ffbcb451066cd43807337a3c1a42c26402a814f/native-list-package-classic/android/src/main/java/com/nativelistpackageclassic/NativeListClassicTurboPackage.java",
      "fileContent": "package com.nativelistpackageclassic;\n\nimport androidx.annotation.Nullable;\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.annotations.ReactModule;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.turbomodule.core.interfaces.TurboModule;\nimport com.facebook.react.uimanager.ViewManager;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class NativeListClassicTurboPackage extends TurboReactPackage {\n    /**\n     * Initialize and export modules based on the name of the required module\n     */\n    @Override\n    @Nullable\n    public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n        return null;\n    }\n\n    /**\n     * Declare info about exported modules\n     */\n    @Override\n    public ReactModuleInfoProvider getReactModuleInfoProvider() {\n        /**\n         * Here declare the array of exported modules\n         */\n        Class<? extends NativeModule>[] moduleList = new Class[] {\n        };\n        final Map<String, ReactModuleInfo> reactModuleInfoMap = new HashMap<>();\n        /**\n         * And here just iterate on that array and produce the info provider instance\n         */\n        for (Class<? extends NativeModule> moduleClass : moduleList) {\n            ReactModule reactModule = moduleClass.getAnnotation(ReactModule.class);\n\n            reactModuleInfoMap.put(\n                reactModule.name(),\n                new ReactModuleInfo(\n                    reactModule.name(),\n                    moduleClass.getName(),\n                    true,\n                    reactModule.needsEagerInit(),\n                    reactModule.hasConstants(),\n                    reactModule.isCxxModule(),\n                    TurboModule.class.isAssignableFrom(moduleClass)\n                )\n            );\n        }\n\n        return new ReactModuleInfoProvider() {\n            @Override\n            public Map<String, ReactModuleInfo> getReactModuleInfos() {\n                return reactModuleInfoMap;\n            }\n        };\n    }\n\n    @Override\n    public List<ViewManager> createViewManagers(ReactApplicationContext reactContext) {\n        /**\n         * Here declare the list of exported native components\n         */\n        return Arrays.<ViewManager>asList(new AndroidNativeListClassicViewManager());\n    }\n}\n",
      "stars": 70,
      "lastCommitDate": "2024-06-02T08:49:10Z"
    },
    {
      "repository": "mateusz1913/rnbridgingtutorial",
      "file": "range-slider-package-classic/android/src/main/java/com/rangesliderpackageclassic/RangeSliderClassicTurboPackage.java",
      "url": "https://github.com/mateusz1913/rnbridgingtutorial/blob/5ffbcb451066cd43807337a3c1a42c26402a814f/range-slider-package-classic/android/src/main/java/com/rangesliderpackageclassic/RangeSliderClassicTurboPackage.java",
      "fileContent": "package com.rangesliderpackageclassic;\n\nimport androidx.annotation.Nullable;\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.annotations.ReactModule;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.turbomodule.core.interfaces.TurboModule;\nimport com.facebook.react.uimanager.ViewManager;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class RangeSliderClassicTurboPackage extends TurboReactPackage {\n    /**\n    * Initialize and export modules based on the name of the required module\n    */\n    @Override\n    @Nullable\n    public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n        return null;\n    }\n\n    /**\n    * Declare info about exported modules\n    */\n    @Override\n    public ReactModuleInfoProvider getReactModuleInfoProvider() {\n        /**\n        * Here declare the array of exported modules\n        */\n        Class<? extends NativeModule>[] moduleList = new Class[] {\n        };\n        final Map<String, ReactModuleInfo> reactModuleInfoMap = new HashMap<>();\n        /**\n        * And here just iterate on that array and produce the info provider instance\n        */\n        for (Class<? extends NativeModule> moduleClass : moduleList) {\n            ReactModule reactModule = moduleClass.getAnnotation(ReactModule.class);\n\n            reactModuleInfoMap.put(\n                reactModule.name(),\n                new ReactModuleInfo(\n                    reactModule.name(),\n                    moduleClass.getName(),\n                    true,\n                    reactModule.needsEagerInit(),\n                    reactModule.hasConstants(),\n                    reactModule.isCxxModule(),\n                    TurboModule.class.isAssignableFrom(moduleClass)\n                )\n            );\n        }\n\n        return new ReactModuleInfoProvider() {\n            @Override\n            public Map<String, ReactModuleInfo> getReactModuleInfos() {\n                return reactModuleInfoMap;\n            }\n        };\n    }\n\n    @Override\n    public List<ViewManager> createViewManagers(ReactApplicationContext reactContext) {\n        /**\n        * Here declare the list of exported native components\n        */\n        return Arrays.<ViewManager>asList(new RangeSliderClassicViewManager());\n    }\n}\n",
      "stars": 70,
      "lastCommitDate": "2024-06-02T08:49:10Z"
    },
    {
      "repository": "mateusz1913/rnbridgingtutorial",
      "file": "save-file-picker-package-classic/android/src/main/java/com/savefilepickerpackageclassic/SaveFilePickerClassicTurboPackage.java",
      "url": "https://github.com/mateusz1913/rnbridgingtutorial/blob/5ffbcb451066cd43807337a3c1a42c26402a814f/save-file-picker-package-classic/android/src/main/java/com/savefilepickerpackageclassic/SaveFilePickerClassicTurboPackage.java",
      "fileContent": "package com.savefilepickerpackageclassic;\n\nimport androidx.annotation.Nullable;\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.annotations.ReactModule;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.turbomodule.core.interfaces.TurboModule;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class SaveFilePickerClassicTurboPackage extends TurboReactPackage {\n    /**\n     * Initialize and export modules based on the name of the required module\n     */\n    @Override\n    @Nullable\n    public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n        if (name.equals(SaveFilePickerClassicModule.NAME)) {\n            return new SaveFilePickerClassicModule(reactContext);\n        }\n        return null;\n    }\n\n    /**\n     * Declare info about exported modules\n     */\n    @Override\n    public ReactModuleInfoProvider getReactModuleInfoProvider() {\n        /**\n         * Here declare the array of exported modules\n         */\n        Class<? extends NativeModule>[] moduleList = new Class[] {\n            SaveFilePickerClassicModule.class\n        };\n        final Map<String, ReactModuleInfo> reactModuleInfoMap = new HashMap<>();\n        /**\n         * And here just iterate on that array and produce the info provider instance\n         */\n        for (Class<? extends NativeModule> moduleClass : moduleList) {\n            ReactModule reactModule = moduleClass.getAnnotation(ReactModule.class);\n\n            reactModuleInfoMap.put(\n                reactModule.name(),\n                new ReactModuleInfo(\n                    reactModule.name(),\n                    moduleClass.getName(),\n                    true,\n                    reactModule.needsEagerInit(),\n                    reactModule.hasConstants(),\n                    reactModule.isCxxModule(),\n                    TurboModule.class.isAssignableFrom(moduleClass)\n                )\n            );\n        }\n\n        return new ReactModuleInfoProvider() {\n            @Override\n            public Map<String, ReactModuleInfo> getReactModuleInfos() {\n                return reactModuleInfoMap;\n            }\n        };\n    }\n}\n",
      "stars": 70,
      "lastCommitDate": "2024-06-02T08:49:10Z"
    },
    {
      "repository": "mateusz1913/rnbridgingtutorial",
      "file": "conic-gradient-package-classic/android/src/main/java/com/conicgradientpackageclassic/ConicGradientClassicTurboPackage.java",
      "url": "https://github.com/mateusz1913/rnbridgingtutorial/blob/5ffbcb451066cd43807337a3c1a42c26402a814f/conic-gradient-package-classic/android/src/main/java/com/conicgradientpackageclassic/ConicGradientClassicTurboPackage.java",
      "fileContent": "package com.conicgradientpackageclassic;\n\nimport androidx.annotation.Nullable;\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.annotations.ReactModule;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.turbomodule.core.interfaces.TurboModule;\nimport com.facebook.react.uimanager.ViewManager;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class ConicGradientClassicTurboPackage extends TurboReactPackage {\n    /**\n    * Initialize and export modules based on the name of the required module\n    */\n    @Override\n    @Nullable\n    public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n        return null;\n    }\n\n    /**\n    * Declare info about exported modules\n    */\n    @Override\n    public ReactModuleInfoProvider getReactModuleInfoProvider() {\n        /**\n        * Here declare the array of exported modules\n        */\n        Class<? extends NativeModule>[] moduleList = new Class[] {\n        };\n        final Map<String, ReactModuleInfo> reactModuleInfoMap = new HashMap<>();\n        /**\n        * And here just iterate on that array and produce the info provider instance\n        */\n        for (Class<? extends NativeModule> moduleClass : moduleList) {\n            ReactModule reactModule = moduleClass.getAnnotation(ReactModule.class);\n\n            reactModuleInfoMap.put(\n                reactModule.name(),\n                new ReactModuleInfo(\n                reactModule.name(),\n                moduleClass.getName(),\n                true,\n                reactModule.needsEagerInit(),\n                reactModule.hasConstants(),\n                reactModule.isCxxModule(),\n                TurboModule.class.isAssignableFrom(moduleClass)\n                )\n            );\n        }\n\n        return new ReactModuleInfoProvider() {\n            @Override\n            public Map<String, ReactModuleInfo> getReactModuleInfos() {\n                return reactModuleInfoMap;\n            }\n        };\n    }\n\n    @Override\n    public List<ViewManager> createViewManagers(ReactApplicationContext reactContext) {\n        /**\n        * Here declare the list of exported native components\n        */\n        return Arrays.<ViewManager>asList(new ConicGradientClassicViewManager());\n    }\n}\n",
      "stars": 70,
      "lastCommitDate": "2024-06-02T08:49:10Z"
    },
    {
      "repository": "rnw-community/rnw-community",
      "file": "packages/react-native-payments/android/src/main/java/com/payments/PaymentsPackage.java",
      "url": "https://github.com/rnw-community/rnw-community/blob/228d59ca1178d4f17eb0487b01039d120e877d6c/packages/react-native-payments/android/src/main/java/com/payments/PaymentsPackage.java",
      "fileContent": "package com.payments;\n\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class PaymentsPackage extends TurboReactPackage {\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n    if (name.equals(PaymentsModule.NAME)) {\n      return new PaymentsModule(reactContext);\n    } else {\n      return null;\n    }\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return () -> {\n      final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n      boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n      moduleInfos.put(\n              PaymentsModule.NAME,\n              new ReactModuleInfo(\n                      PaymentsModule.NAME,\n                      PaymentsModule.NAME,\n                      false, // canOverrideExistingModule\n                      false, // needsEagerInit\n                      true, // hasConstants\n                      false, // isCxxModule\n                      isTurboModule // isTurboModule\n      ));\n      return moduleInfos;\n    };\n  }\n}\n",
      "stars": 57,
      "lastCommitDate": "2024-12-15T16:58:54Z"
    },
    {
      "repository": "Ucekay/nitro-palette",
      "file": "react-native-nitro-palette/android/src/main/java/com/nitropalette/NitroPalettePackage.java",
      "url": "https://github.com/Ucekay/nitro-palette/blob/d138ed6fa2ac0fc2333aa59ec5fec558c3fe56ea/react-native-nitro-palette/android/src/main/java/com/nitropalette/NitroPalettePackage.java",
      "fileContent": "package com.nitropalette;\n\nimport android.util.Log;\n\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\nimport com.margelo.nitro.core.HybridObject;\nimport com.margelo.nitro.core.HybridObjectRegistry;\n\nimport java.util.HashMap;\nimport java.util.function.Supplier;\n\npublic class NitroPalettePackage extends TurboReactPackage {\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n    return null;\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return () -> {\n        return new HashMap<>();\n    };\n  }\n\n  static {\n    System.loadLibrary(\"NitroPalette\");\n  }\n}\n",
      "stars": 42,
      "lastCommitDate": "2024-12-18T21:20:38Z"
    },
    {
      "repository": "skiniks/react-native-shiki-engine",
      "file": "android/src/main/java/com/shikiengine/ShikiEnginePackage.java",
      "url": "https://github.com/skiniks/react-native-shiki-engine/blob/0d530a03f07b7fe7e8e641bf60d81ae49e261b39/android/src/main/java/com/shikiengine/ShikiEnginePackage.java",
      "fileContent": "package com.shikiengine;\n\nimport androidx.annotation.NonNull;\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ShikiEnginePackage extends TurboReactPackage {\n    @Override\n    @NonNull\n    public NativeModule getModule(@NonNull String name, @NonNull ReactApplicationContext reactContext) {\n        if (name.equals(NativeShikiEngineSpec.NAME)) {\n            return new ShikiEngineModule(reactContext);\n        }\n        return null;\n    }\n\n    @Override\n    @NonNull\n    public ReactModuleInfoProvider getReactModuleInfoProvider() {\n        return () -> {\n            final Map<String, ReactModuleInfo> moduleInfo = new HashMap<>();\n            boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n\n            moduleInfo.put(\n                NativeShikiEngineSpec.NAME,\n                new ReactModuleInfo(\n                    NativeShikiEngineSpec.NAME,\n                    NativeShikiEngineSpec.NAME,\n                    false,\n                    false,\n                    true,\n                    false,\n                    isTurboModule\n                )\n            );\n            return moduleInfo;\n        };\n    }\n}\n",
      "stars": 41,
      "lastCommitDate": "2024-11-28T21:07:59Z"
    },
    {
      "repository": "fullstorydev/fullstory-react-native",
      "file": "android/src/main/java/com/fullstory/reactnative/FullStoryPackage.java",
      "url": "https://github.com/fullstorydev/fullstory-react-native/blob/2978292660a655ce710c01b46bb87b1fa8725b00/android/src/main/java/com/fullstory/reactnative/FullStoryPackage.java",
      "fileContent": "package com.fullstory.reactnative;\n\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.ReactPackage;\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class FullStoryPackage extends TurboReactPackage implements ReactPackage {\n    @Nullable\n    @Override\n    public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n        if (FullStoryModuleImpl.NAME.equals(name)) {\n            return new FullStoryModule(reactContext);\n        } else if (FullStoryPrivateModuleImpl.NAME.equals(name)) {\n            return new FullStoryPrivateModule(reactContext);\n        } else {\n            return null;\n        }\n    }\n\n    @Override\n    public ReactModuleInfoProvider getReactModuleInfoProvider() {\n        final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n        boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n        moduleInfos.put(\n                FullStoryModuleImpl.NAME,\n                new ReactModuleInfo(\n                        FullStoryModuleImpl.NAME,\n                        FullStoryModuleImpl.NAME,\n                        false, // canOverrideExistingModule\n                        false, // needsEagerInit\n                        true, // hasConstants\n                        false, // isCxxModule\n                        isTurboModule // isTurboModule\n        ));\n        moduleInfos.put(\n                FullStoryPrivateModuleImpl.NAME,\n                new ReactModuleInfo(\n                        FullStoryPrivateModuleImpl.NAME,\n                        FullStoryPrivateModuleImpl.NAME,\n                        false, // canOverrideExistingModule\n                        false, // needsEagerInit\n                        true, // hasConstants\n                        false, // isCxxModule\n                        isTurboModule // isTurboModule\n        ));\n\n        return new ReactModuleInfoProvider() {\n            @Override\n            public Map<String, ReactModuleInfo> getReactModuleInfos() {\n                return moduleInfos;\n            }\n        };\n    }\n}",
      "stars": 41,
      "lastCommitDate": "2024-11-06T18:43:33Z"
    },
    {
      "repository": "4cc3ssX/react-native-nitro-totp",
      "file": "android/src/main/java/com/margelo/nitro/totp/NitroTotpPackage.java",
      "url": "https://github.com/4cc3ssX/react-native-nitro-totp/blob/d8da89fea0ff471fccabf4f48be9a056f6a5e4b4/android/src/main/java/com/margelo/nitro/totp/NitroTotpPackage.java",
      "fileContent": "package com.margelo.nitro.totp;\n\nimport android.util.Log;\n\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\nimport com.margelo.nitro.core.HybridObject;\nimport com.margelo.nitro.core.HybridObjectRegistry;\n\nimport java.util.HashMap;\nimport java.util.function.Supplier;\n\npublic class NitroTotpPackage extends TurboReactPackage {\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n    return null;\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return () -> {\n        return new HashMap<>();\n    };\n  }\n\n  static {\n    System.loadLibrary(\"NitroTotp\");\n  }\n}\n",
      "stars": 31,
      "lastCommitDate": "2024-10-18T08:11:19Z"
    },
    {
      "repository": "ArturKalach/react-native-external-keyboard",
      "file": "android/src/main/java/com/externalkeyboard/ExternalKeyboardViewPackage.java",
      "url": "https://github.com/ArturKalach/react-native-external-keyboard/blob/72c416058696cb8090f72953ef2a54dbc4c342a5/android/src/main/java/com/externalkeyboard/ExternalKeyboardViewPackage.java",
      "fileContent": "package com.externalkeyboard;\n\n\nimport androidx.annotation.Nullable;\n\nimport com.externalkeyboard.views.ExternalKeyboardView.ExternalKeyboardViewManager;\nimport com.externalkeyboard.views.TextInputFocusWrapper.TextInputFocusWrapperManager;\nimport com.facebook.react.TurboReactPackage;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.uimanager.ViewManager;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n\npublic class ExternalKeyboardViewPackage extends TurboReactPackage {\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n    if (name.equals(A11yKeyboardModule.NAME)) {\n      return new A11yKeyboardModule(reactContext);\n    } else {\n      return null;\n    }\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return () -> {\n      final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n      boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n      moduleInfos.put(A11yKeyboardModule.NAME, new ReactModuleInfo(A11yKeyboardModule.NAME, A11yKeyboardModule.NAME, false, // canOverrideExistingModule\n        false, // needsEagerInit\n        true, // hasConstants\n        false, // isCxxModule\n        isTurboModule // isTurboModule\n      ));\n      return moduleInfos;\n    };\n  }\n\n  @Override\n  public List<ViewManager> createViewManagers(ReactApplicationContext reactContext) {\n    List<ViewManager> viewManagers = new ArrayList<>();\n    viewManagers.add(new ExternalKeyboardViewManager());\n    viewManagers.add(new TextInputFocusWrapperManager());\n    return viewManagers;\n  }\n\n  @Override\n  public List<NativeModule> createNativeModules(ReactApplicationContext reactContext) {\n    return Collections.emptyList();\n  }\n}\n",
      "stars": 28,
      "lastCommitDate": "2024-11-17T14:54:14Z"
    },
    {
      "repository": "GameWithPixels/pixels-js",
      "file": "packages/vision-camera-rgb-averages/android/src/main/java/com/systemicgames/visioncamerargbaverages/VisionCameraRgbAveragesPackage.java",
      "url": "https://github.com/GameWithPixels/pixels-js/blob/c0a51132cf843346d8e05bc6b57d0518d2218f2d/packages/vision-camera-rgb-averages/android/src/main/java/com/systemicgames/visioncamerargbaverages/VisionCameraRgbAveragesPackage.java",
      "fileContent": "package com.systemicgames.visioncamerargbaverages;\n\nimport androidx.annotation.Nullable;\n\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class VisionCameraRgbAveragesPackage extends TurboReactPackage {\n\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n    if (name.equals(VisionCameraRgbAveragesModule.NAME)) {\n      return new VisionCameraRgbAveragesModule(reactContext);\n    } else {\n      return null;\n    }\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n    return () -> {\n      final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n      boolean isTurboModule = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n      moduleInfos.put(\n              VisionCameraRgbAveragesModule.NAME,\n              new ReactModuleInfo(\n                      VisionCameraRgbAveragesModule.NAME,\n                      VisionCameraRgbAveragesModule.NAME,\n                      false, // canOverrideExistingModule\n                      false, // needsEagerInit\n                      true, // hasConstants\n                      false, // isCxxModule\n                      isTurboModule // isTurboModule\n      ));\n      return moduleInfos;\n    };\n  }\n}\n",
      "stars": 20,
      "lastCommitDate": "2024-12-02T09:58:56Z"
    }
  ]
}